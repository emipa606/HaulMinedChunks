using HarmonyLib;
using Verse;
using RimWorld;
using System;

namespace HaulMinedChunks;

[HarmonyPatch(typeof(GenPlace), nameof(GenPlace.TryPlaceThing), new Type[] { typeof(Thing), typeof(IntVec3), typeof(Map), typeof(ThingPlaceMode), typeof(Action<Thing, int>), typeof(Predicate<IntVec3>), typeof(Rot4), typeof(int) })]
public static class GenPlace_TryPlaceThing_Patch
{
    // This Postfix runs after GenPlace.TryPlaceThing has completed its execution.
    // 'thing' is the object that was just attempted to be placed.
    // '__result' indicates whether the placement was successful (true) or not (false).
    public static void Postfix(Thing thing, bool __result)
    {
        // If the placement failed or the thing is null, there's nothing to mark.
        if (!__result || thing == null)
        {
            Log.Message($"[HaulMinedChunks] GenPlace_TryPlaceThing_Patch: Postfix skipped because placement failed (__result: {__result}) or thing is null (thing == null: {thing == null}).");
            return;
        }

        // If placement was successful, call our custom logic to check and mark the thing for hauling.
        Log.Message($"[HaulMinedChunks] GenPlace_TryPlaceThing_Patch: Calling MarkIfNeeded for {thing.LabelCap}.");
        HaulMinedChunks.MarkIfNeeded(thing);
    }
}